// CS 432 PROJECT 0: DECAF PROGRAMMING
//Jacob Hitzges

def int fact(int n)
{



    int returnInt;
    returnInt = 1;

    if (n == 0) {

        return n;

    }

    while(n > 0) {

        returnInt = returnInt * n;

        n = n - 1;



    }
    return returnInt;

}

def int fib(int n)
{
    if (n == 0) {

        return 0;
    }
    if (n == 1) {

        return 1;
    } else {

        return(fib(n - 1) + fib(n - 2));
    }
}

def bool is_prime(int n)
{

    int i;
    i = n - 1;

    while (i > 1) {

        if (n % i == 0) {
            return false;
        }

        i = i - 1;
    }
    return true;
}

def int gcd(int a, int b)
{

    int gcd;
    gcd = a;

    while (gcd > 0) {
        if (a % gcd == 0) {

            if (b % gcd == 0) {
                return gcd;
            }

        }
        gcd = gcd - 1;
    }
    return 0;
}

int nums[100];

def int sum_nums(int len)
{

    int value;
    int i;
    value = 0;
    i = 0;



    if (len == 0) {
        return 0;
    }



    while (len > 0) {

        value = value + nums[i];

        i = i + 1;
        len = len - 1;
    }

    return value;

}

def void sort_nums(int len)
{
    int i;
    int temp;
    i = len;
    temp = 0;

    while (len > 0) {

        i = 0;

        while (i < len) {

            if (nums[len] < nums[i]) {

                temp = nums[i];
                nums[i] = nums[len];
                nums[len] = temp;


            }
            i = i + 1;
        }


        len = len - 1;
    }
    return;

}

def void draw_triangle(int base)
{

    int i;
    int j;
    int l;
    i = 1;
    j = 1;

    while (i <= base) {

        l = 0;

        j = i;
        while(j <= base) {

            print_str(" ");
            j = j + 1;
        }

        while (l != 2 * i - 1) {
            print_str("#");
            l = l + 1;
        }
        l = 0;
        print_str("\n");

        i = i + 1;

    }

    return;
}

def int main()
{

    nums[0] = 1;
    nums[1] = 5;
    nums[2] = 2;
    nums[3] = 11;
    nums[4] = 7;
    nums[5] = 6;
    nums[6] = 99999999999;
//return sum_nums(6);

//sort_nums(6);
    draw_triangle(20);


    return 0;


}

